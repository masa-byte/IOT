# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import fishpond_pb2 as fishpond__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


class FishPondStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetAllData = channel.unary_unary(
                '/fishpond.FishPond/GetAllData',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=fishpond__pb2.MultiPondData.FromString,
                )
        self.GetDataByFishPondId = channel.unary_unary(
                '/fishpond.FishPond/GetDataByFishPondId',
                request_serializer=fishpond__pb2.DataId.SerializeToString,
                response_deserializer=fishpond__pb2.MultiPondData.FromString,
                )
        self.GetDataByEntryId = channel.unary_unary(
                '/fishpond.FishPond/GetDataByEntryId',
                request_serializer=fishpond__pb2.DataId.SerializeToString,
                response_deserializer=fishpond__pb2.PondData.FromString,
                )
        self.CreateData = channel.unary_unary(
                '/fishpond.FishPond/CreateData',
                request_serializer=fishpond__pb2.PondData.SerializeToString,
                response_deserializer=fishpond__pb2.PondData.FromString,
                )
        self.UpdateData = channel.unary_unary(
                '/fishpond.FishPond/UpdateData',
                request_serializer=fishpond__pb2.PondData.SerializeToString,
                response_deserializer=fishpond__pb2.PondData.FromString,
                )
        self.DeleteDataByFishPondId = channel.unary_unary(
                '/fishpond.FishPond/DeleteDataByFishPondId',
                request_serializer=fishpond__pb2.DataId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.DeleteDataByEntryId = channel.unary_unary(
                '/fishpond.FishPond/DeleteDataByEntryId',
                request_serializer=fishpond__pb2.DataId.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                )
        self.MinDataValuesForDataDateRange = channel.unary_unary(
                '/fishpond.FishPond/MinDataValuesForDataDateRange',
                request_serializer=fishpond__pb2.DataDateRange.SerializeToString,
                response_deserializer=fishpond__pb2.MultiPondData.FromString,
                )
        self.MaxDataValuesForDataDateRange = channel.unary_unary(
                '/fishpond.FishPond/MaxDataValuesForDataDateRange',
                request_serializer=fishpond__pb2.DataDateRange.SerializeToString,
                response_deserializer=fishpond__pb2.MultiPondData.FromString,
                )
        self.AvgDataValuesForDataDateRange = channel.unary_unary(
                '/fishpond.FishPond/AvgDataValuesForDataDateRange',
                request_serializer=fishpond__pb2.DataDateRange.SerializeToString,
                response_deserializer=fishpond__pb2.MultiAggPondData.FromString,
                )
        self.SumDataValuesForDataDateRange = channel.unary_unary(
                '/fishpond.FishPond/SumDataValuesForDataDateRange',
                request_serializer=fishpond__pb2.DataDateRange.SerializeToString,
                response_deserializer=fishpond__pb2.MultiAggPondData.FromString,
                )


class FishPondServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetAllData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataByFishPondId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDataByEntryId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDataByFishPondId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDataByEntryId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MinDataValuesForDataDateRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def MaxDataValuesForDataDateRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AvgDataValuesForDataDateRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SumDataValuesForDataDateRange(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FishPondServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetAllData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllData,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=fishpond__pb2.MultiPondData.SerializeToString,
            ),
            'GetDataByFishPondId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataByFishPondId,
                    request_deserializer=fishpond__pb2.DataId.FromString,
                    response_serializer=fishpond__pb2.MultiPondData.SerializeToString,
            ),
            'GetDataByEntryId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDataByEntryId,
                    request_deserializer=fishpond__pb2.DataId.FromString,
                    response_serializer=fishpond__pb2.PondData.SerializeToString,
            ),
            'CreateData': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateData,
                    request_deserializer=fishpond__pb2.PondData.FromString,
                    response_serializer=fishpond__pb2.PondData.SerializeToString,
            ),
            'UpdateData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateData,
                    request_deserializer=fishpond__pb2.PondData.FromString,
                    response_serializer=fishpond__pb2.PondData.SerializeToString,
            ),
            'DeleteDataByFishPondId': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDataByFishPondId,
                    request_deserializer=fishpond__pb2.DataId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DeleteDataByEntryId': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDataByEntryId,
                    request_deserializer=fishpond__pb2.DataId.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'MinDataValuesForDataDateRange': grpc.unary_unary_rpc_method_handler(
                    servicer.MinDataValuesForDataDateRange,
                    request_deserializer=fishpond__pb2.DataDateRange.FromString,
                    response_serializer=fishpond__pb2.MultiPondData.SerializeToString,
            ),
            'MaxDataValuesForDataDateRange': grpc.unary_unary_rpc_method_handler(
                    servicer.MaxDataValuesForDataDateRange,
                    request_deserializer=fishpond__pb2.DataDateRange.FromString,
                    response_serializer=fishpond__pb2.MultiPondData.SerializeToString,
            ),
            'AvgDataValuesForDataDateRange': grpc.unary_unary_rpc_method_handler(
                    servicer.AvgDataValuesForDataDateRange,
                    request_deserializer=fishpond__pb2.DataDateRange.FromString,
                    response_serializer=fishpond__pb2.MultiAggPondData.SerializeToString,
            ),
            'SumDataValuesForDataDateRange': grpc.unary_unary_rpc_method_handler(
                    servicer.SumDataValuesForDataDateRange,
                    request_deserializer=fishpond__pb2.DataDateRange.FromString,
                    response_serializer=fishpond__pb2.MultiAggPondData.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'fishpond.FishPond', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class FishPond(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetAllData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/GetAllData',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            fishpond__pb2.MultiPondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataByFishPondId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/GetDataByFishPondId',
            fishpond__pb2.DataId.SerializeToString,
            fishpond__pb2.MultiPondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDataByEntryId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/GetDataByEntryId',
            fishpond__pb2.DataId.SerializeToString,
            fishpond__pb2.PondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def CreateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/CreateData',
            fishpond__pb2.PondData.SerializeToString,
            fishpond__pb2.PondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/UpdateData',
            fishpond__pb2.PondData.SerializeToString,
            fishpond__pb2.PondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDataByFishPondId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/DeleteDataByFishPondId',
            fishpond__pb2.DataId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteDataByEntryId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/DeleteDataByEntryId',
            fishpond__pb2.DataId.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MinDataValuesForDataDateRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/MinDataValuesForDataDateRange',
            fishpond__pb2.DataDateRange.SerializeToString,
            fishpond__pb2.MultiPondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def MaxDataValuesForDataDateRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/MaxDataValuesForDataDateRange',
            fishpond__pb2.DataDateRange.SerializeToString,
            fishpond__pb2.MultiPondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def AvgDataValuesForDataDateRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/AvgDataValuesForDataDateRange',
            fishpond__pb2.DataDateRange.SerializeToString,
            fishpond__pb2.MultiAggPondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SumDataValuesForDataDateRange(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/fishpond.FishPond/SumDataValuesForDataDateRange',
            fishpond__pb2.DataDateRange.SerializeToString,
            fishpond__pb2.MultiAggPondData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
